# This is the "one-and-only" configuration for OpenDaVINCI.
# Its format is like:
#
# section.key=value
#
# If you have several modules of the same type, the following configuration
# scheme applies:
#
# global.key=value # <-- This configuration applies for all modules.
#
# section.key=value # <-- This configuration applies for all modules of type "section".
#
# section:ID.key=value # <-- This configuration applies for the module "ID" of type "section".


###############################################################################
###############################################################################
#
# GLOBAL CONFIGURATION
#

# The following attributes define the buffer sizes for recording and
# replaying. You need to adjust these parameters depending on the
# camera resolution for example (640x480x3 --> 1000000 for memorySegment,
# 1280x720x3 --> 2800000).
global.buffer.memorySegmentSize = 2800000 # Size of a memory segment in bytes.
global.buffer.numberOfMemorySegments = 4  # Number of memory segments.

# The following key describes the list of modules expected to participate in this --cid session.
global.session.expectedModules = copplar-control-example


###############################################################################
###############################################################################
#
# NEXT, THE CONFIGURATION FOR OpenDaVINCI TOOLS FOLLOWS.
#
###############################################################################
###############################################################################
#
# CONFIGURATION FOR ODSUPERCOMPONENT
#

# If the managed level is pulse_shift, all connected modules will be informed
# about the supercomponent's real time by this increment per module. Thus, the
# execution times per modules are better aligned with supercomponent and the
# data exchange is somewhat more predictable.
odsupercomponent.pulseshift.shift = 10000 # (in microseconds)

# If the managed level is pulse_time_ack, this is the timeout for waiting for
# an ACK message from a connected client.
odsupercomponent.pulsetimeack.timeout = 5000 # (in milliseconds)

# If the managed level is pulse_time_ack, the modules are triggered sequentially
# by sending pulses and waiting for acknowledgment messages. To allow the modules
# to deliver their respective containers, this yielding time is used to sleep
# before supercomponent sends the pulse messages the next module in this execution
# cycle. This value needs to be adjusted for networked simulations to ensure
# deterministic execution.
#odsupercomponent.pulsetimeack.yield = 5000 # (in microseconds) # OLD

odsupercomponent.pulseshift.shift = 10000 # (in microseconds)
odsupercomponent.pulsetimeack.timeout = 5000 # (in milliseconds)
odsupercomponent.pulsetimeack.yield = 5000 # (in microseconds)
odsupercomponent.pulsetimeack.exclude = odcockpit

# List of modules (without blanks) that will not get a pulse message from odsupercomponent.
odsupercomponent.pulsetimeack.exclude = odcockpit

###############################################################################
###############################################################################
#
# CONFIGURATION FOR PROXY
#

proxy-miniature-analog.conversion-constant = 1
proxy-miniature-analog.debug = 0
proxy-miniature-analog.pins = 0,1,2,3,4,5,6

proxy-miniature-gpio.debug = 0
proxy-miniature-gpio.systemPath = /sys/class/gpio
proxy-miniature-gpio.pins = 30,31,60,51,26,46,47,44,45
proxy-miniature-gpio.values = 0,1,0,1,0,0,0,0,0
proxy-miniature-gpio.directions = out,out,out,out,in,in,out,in,in

proxy-miniature-pwm:1.debug = 0
proxy-miniature-pwm:1.systemPath = /sys/class/pwm/pwmchip0
proxy-miniature-pwm:1.pins = 0
proxy-miniature-pwm:1.periodsNs = 50000
proxy-miniature-pwm:1.dutyCyclesNs = 25000

proxy-miniature-pwm:2.debug = 0
proxy-miniature-pwm:2.systemPath = /sys/class/pwm/pwmchip2
proxy-miniature-pwm:2.pins = 0
proxy-miniature-pwm:2.periodsNs = 50000
proxy-miniature-pwm:2.dutyCyclesNs = 25000

proxy-miniature-pwm:3.debug = 0
proxy-miniature-pwm:3.systemPath = /sys/class/pwm/pwmchip4
proxy-miniature-pwm:3.pins = 0
proxy-miniature-pwm:3.periodsNs = 20000000
proxy-miniature-pwm:3.dutyCyclesNs = 1650000

proxy-miniature-sonar-pru.pruIndex = 0
proxy-miniature-sonar-pru.debug = 1
proxy-miniature-sonar-pru.firmwarePath = ../share/opendlv-proxy-miniature-sonar-pru/firmware/hcsr04.bin

###############################################################################
###############################################################################
#
# CONFIGURATION FOR SYSTEM
#

logic-miniature-navigation.gpio-pins = 31
logic-miniature-navigation.pwm-pins = 0,1
logic-miniature-navigation.outer-walls = 50.84,-23.93;-9.48,-24.49;-9.70,5.50;50.54,5.65;
logic-miniature-navigation.inner-walls = 40.02,5.86;39.76,-6.63;2.88,5.33;2.92,0.57;-9.71,-4.17;-7.45,-4.11;33.06,-24.10;33.08,-19.09;33.08,-19.09;35.50,-19.10;20.74,-17.83;14.24,-7.36;14.24,-7.36;18.59,-4.93;18.59,-4.93;26.08,-6.93;26.08,-6.93;20.74,-17.83;
logic-miniature-navigation.points-of-interest = 45.84,-18.93;-4.48,-19.49;-4.70,0.50;45.54,0.65;
